
<div class="row my-5">
  <div class="col">
    <h1 class="text-center mb-5">회원정보수정</h1>
    <div class="card p-5">
      <form name="frm" method="post">
        <div class="input-group my-2">
          <div class="input-group-text px-5">성명</div>
          <input class="form-control" id="name" value="나잘난" />
        </div>
        <div class="input-group my-2">
          <div class="input-group-text px-5">주소</div>
          <input class="form-control" id="address" value="서울특별시 금천구 가산디지털2로" />
        </div>
        <div class="input-group my-2">
          <div class="input-group-text px-5">전화</div>
          <input class="form-control" id="phone" value="010-1010-2020" />
        </div>
        <div>
          <img id="fileName" src="https://placehold.co/200x200" width="30%" />
          <input class="form-control mt-2" type="file" id="file" />
        </div>
        <div class="text-center mt-3">
          <button class="btn-primary btn px-5">정보수정</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script type = "module">
  import { app } from '/javascripts/firebase.js'
  import {getFirestore, collection, getDoc, setDoc, doc} from "https://www.gstatic.com/firebasejs/11.7.3/firebase-firestore.js"
  const db = getFirestore(app)
  const uid = localStorage.getItem("uid")
  const form = document.querySelector("#form")
  const name = document.querySelector("#name")
  const address = document.querySelector("#address")
  const phone = document.querySelector("#phone")
//수정처리 - 있는 정보를 수정하므로 화면을 열기 전에 DB서버를 경유한다
//action(조회) >> 화면 >> action(입력,덮어쓰기) >> 화면
//입력처리 - 없는데 새로운 값을 입력한다
//입력처리일때는 화면을 열기 전에 DB서버를 경유하지 않는다
//화면 >> action >> 화면
//수정하기 일때는 입력일 때와 다르게 Firestore에 접속하여
//기존 사용자 정보를 가져와서 화면에 출력한다
const snapshot = await getDoc(doc(db, `member/${uid}`))
if(snapshot.data()){
  const user = snapshot.data()
  name.value = user.name;
  address.value = user.address;
  phone.value = user.phone;
  if(user.photo){

  }
form.addEventListener('submit', async (e) => {
    e.preventDefault(); // 폼 제출 방지
    if(window.confirm("회원정보를 수정하시겠습니까?")) {
      const name = name.value;
      const address = address.value;
      const phone = phone.value;
    }
    await setDoc(doc(db, `member/${uid}`), {
      name: name.value,
      address: address.value,
      phone: phone.value,
    });
    alert("회원정보가 수정되었습니다.");
    window.location.href = "/users/mypage";
    
  });
}

</script>